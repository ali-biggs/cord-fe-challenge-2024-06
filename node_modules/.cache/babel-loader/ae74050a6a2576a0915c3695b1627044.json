{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/checkbox/index.tsx\";\nimport React, { useState } from \"react\";\nimport * as colors from \"../../colors\";\nimport styled from \"styled-components\";\nexport default function CheckBox() {\n  // Create a custom checkbox component\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/React.createElement(CheckboxCont, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })));\n}\nconst CheckboxCont = styled.div`\n  position: relative;\n`;\nconst Input = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  width: 10px;\n  height: 10px;\n  position: relative;\n  appearance: none;\n  background-color: ${colors.lightBackground};\n  border: 2px solid #ccc;\n  border-radius: 3px;\n  outline: none;\n  cursor: pointer;\n\n  &:checked {\n    background-colour: ${colors.lightBackground};\n  }\n`;\nconst Label = styled.label`\n  align-items: center;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 8px;\n`;","map":{"version":3,"names":["React","useState","colors","styled","CheckBox","checked","setChecked","createElement","CheckboxCont","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Label","Input","div","input","attrs","type","lightBackground","label"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/checkbox/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as colors from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function CheckBox() {\r\n  // Create a custom checkbox component\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n\r\n  return (\r\n    <CheckboxCont>\r\n      <Label>\r\n        <Input />\r\n      </Label>\r\n    </CheckboxCont>\r\n  );\r\n}\r\n\r\nconst CheckboxCont = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Input = styled.input.attrs({ type: \"checkbox\" })`\r\n  width: 10px;\r\n  height: 10px;\r\n  position: relative;\r\n  appearance: none;\r\n  background-color: ${colors.lightBackground};\r\n  border: 2px solid #ccc;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  &:checked {\r\n    background-colour: ${colors.lightBackground};\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  align-items: center;\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n`;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,MAAM,MAAM,cAAc;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAU,KAAK,CAAC;EAEtD,oBACED,KAAA,CAAAO,aAAA,CAACC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXd,KAAA,CAAAO,aAAA,CAACQ,KAAK;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACJd,KAAA,CAAAO,aAAA,CAACS,KAAK;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACH,CACK,CAAC;AAEnB;AAEA,MAAMN,YAAY,GAAGL,MAAM,CAACc,GAAG;AAC/B;AACA,CAAC;AAED,MAAMD,KAAK,GAAGb,MAAM,CAACe,KAAK,CAACC,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,CAAC;AACtD;AACA;AACA;AACA;AACA,sBAAsBlB,MAAM,CAACmB,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBnB,MAAM,CAACmB,eAAe;AAC/C;AACA,CAAC;AAED,MAAMN,KAAK,GAAGZ,MAAM,CAACmB,KAAK;AAC1B;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}