{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport * as colors from \"../../colors\";\nimport Checkbox from \"../checkbox\";\nexport default function ExpandableFilters({\n  genres,\n  ratings,\n  languages\n}) {\n  const [filtersShown, setFiltersShown] = useState(false);\n  const [showGenres, setShowGenres] = useState(true);\n  const [showMinVote, setShowMinVote] = useState(false);\n  const [showLanguage, setShowLanguage] = useState(false);\n  const handleClick = filterType => {\n    switch (filterType) {\n      case \"genre\":\n        setShowGenres(prev => !prev);\n      case \"minVote\":\n        setShowGenres(prev => !prev);\n      case \"language\":\n        setShowGenres(prev => !prev);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    filtersShown: showGenres,\n    onClick: () => handleClick(\"genre\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Select genre(s)\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableSection, {\n    expanded: showGenres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, genres.map(genre => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      genreTitle: genre.name,\n      genreId: genre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    filtersShown: showMinVote,\n    onClick: () => handleClick(\"minVote\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Select min. vote\")), /*#__PURE__*/React.createElement(ExpandableSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    filtersShown: showLanguage,\n    onClick: () => handleClick(\"language\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Select language\")), /*#__PURE__*/React.createElement(ExpandableSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding-left: 3px;\n`;\nconst SectionLabel = styled.div`\n  font-weight: 200;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  margin-top: 50px;\n`;\nconst ExpandableSection = styled.div`\n  margin-top: 20px;\n  height: ${props => props.expanded ? \"100%\" : \"0%\"};\n  transition: height 0.3s ease;\n  overflow: hidden;\n  \n`;\nconst ExpandableIcon = styled.button`\n  position: relative;\n  width: 15px;\n  height: 15px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n\n  ${props => !props.filtersShown ? css`\n          &::before,\n          &::after {\n            content: \"\";\n            position: absolute;\n            background-color: ${colors.fontColor};\n          }\n\n          &::before {\n            top: 50%;\n            left: 0;\n            width: 100%;\n            height: 2px;\n            transform: translateY(-50%);\n          }\n\n          &::after {\n            top: 0;\n            left: 50%;\n            width: 2px;\n            height: 100%;\n            transform: translateX(-50%);\n          }\n        ` : css`\n          &::before,\n          &::after {\n            content: \"\";\n            position: absolute;\n            background-color: ${colors.fontColor};\n          }\n\n          &::before {\n            top: 50%;\n            left: 0;\n            width: 100%;\n            height: 2px;\n            transform: translateY(-50%);\n          }\n        `}\n`;","map":{"version":3,"names":["React","useState","styled","css","colors","Checkbox","ExpandableFilters","genres","ratings","languages","filtersShown","setFiltersShown","showGenres","setShowGenres","showMinVote","setShowMinVote","showLanguage","setShowLanguage","handleClick","filterType","prev","createElement","Fragment","SectionHeader","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ExpandableIcon","onClick","SectionLabel","Container","ExpandableSection","expanded","map","genre","genreTitle","name","genreId","id","div","props","button","fontColor"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as colors from \"../../colors\";\r\n\r\nimport Checkbox from \"../checkbox\";\r\n\r\ninterface ExpandableIconProps {\r\n  filtersShown?: boolean;\r\n}\r\ninterface ExpandableSectionProps {\r\n  expanded?: boolean;\r\n}\r\n\r\ntype ExpandableFiltersProps = {\r\n  // genres, ratings, languages, searchMovies\r\n  genres: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n  ratings: {\r\n    id: number;\r\n    name: number;\r\n  }[];\r\n  languages: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\nexport default function ExpandableFilters({\r\n  genres,\r\n  ratings,\r\n  languages,\r\n}: ExpandableFiltersProps) {\r\n  const [filtersShown, setFiltersShown] = useState<boolean>(false);\r\n  const [showGenres, setShowGenres] = useState<boolean>(true);\r\n  const [showMinVote, setShowMinVote] = useState<boolean>(false);\r\n  const [showLanguage, setShowLanguage] = useState<boolean>(false);\r\n\r\n  const handleClick = (filterType: string) => {\r\n    switch (filterType) {\r\n      case \"genre\":\r\n        setShowGenres((prev) => !prev);\r\n      case \"minVote\":\r\n        setShowGenres((prev) => !prev);\r\n      case \"language\":\r\n        setShowGenres((prev) => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          filtersShown={showGenres}\r\n          onClick={() => handleClick(\"genre\")}\r\n        />\r\n        <SectionLabel>Select genre(s)</SectionLabel>\r\n      </SectionHeader>\r\n      <Container>\r\n        <ExpandableSection expanded={showGenres}>\r\n          {genres.map((genre) => {\r\n            return <Checkbox genreTitle={genre.name} genreId={genre.id} />;\r\n          })}\r\n        </ExpandableSection>\r\n      </Container>\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          filtersShown={showMinVote}\r\n          onClick={() => handleClick(\"minVote\")}\r\n        />\r\n        <SectionLabel>Select min. vote</SectionLabel>\r\n      </SectionHeader>\r\n      <ExpandableSection></ExpandableSection>\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          filtersShown={showLanguage}\r\n          onClick={() => handleClick(\"language\")}\r\n        />\r\n        <SectionLabel>Select language</SectionLabel>\r\n      </SectionHeader>\r\n      <ExpandableSection></ExpandableSection>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-left: 3px;\r\n`;\r\n\r\nconst SectionLabel = styled.div`\r\n  font-weight: 200;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst ExpandableSection = styled.div<ExpandableSectionProps>`\r\n  margin-top: 20px;\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0%\")};\r\n  transition: height 0.3s ease;\r\n  overflow: hidden;\r\n  \r\n`;\r\n\r\nconst ExpandableIcon = styled.button<ExpandableIconProps>`\r\n  position: relative;\r\n  width: 15px;\r\n  height: 15px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n\r\n  ${(props) =>\r\n    !props.filtersShown\r\n      ? css`\r\n          &::before,\r\n          &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            background-color: ${colors.fontColor};\r\n          }\r\n\r\n          &::before {\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            transform: translateY(-50%);\r\n          }\r\n\r\n          &::after {\r\n            top: 0;\r\n            left: 50%;\r\n            width: 2px;\r\n            height: 100%;\r\n            transform: translateX(-50%);\r\n          }\r\n        `\r\n      : css`\r\n          &::before,\r\n          &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            background-color: ${colors.fontColor};\r\n          }\r\n\r\n          &::before {\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            transform: translateY(-50%);\r\n          }\r\n        `}\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}