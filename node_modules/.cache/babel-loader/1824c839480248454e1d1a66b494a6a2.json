{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"../../colors\";\nimport { useMediaQuery } from \"../../utils/useMediaQuery\";\nimport { applyLastLineFade } from \"../../utils/lastLineFade\";\nimport { media } from \"../../utils/mediaBreakPoints\";\nimport { formatUkDate } from \"../../utils/formatUkDate\";\nexport default function MovieItem({\n  movie,\n  genreList\n}) {\n  const isMobile = useMediaQuery(\"(max-width: 480px)\");\n  const getGenreLabels = (ids, genreList) => {\n    const unformattedLabels = ids.map(id => {\n      const genre = genreList.find(genre => genre.id === id);\n      return genre ? genre.name : \"Unknown\";\n    });\n    const formattedLabels = unformattedLabels.join(\" | \");\n    return formattedLabels;\n  };\n  return /*#__PURE__*/React.createElement(MovieItemWrapper, {\n    tabIndex: 0,\n    \"aria-labelledby\": `movie-title-${movie.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftCont, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviePoster, {\n    alt: `${movie.title} poster`,\n    src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(RightCont, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MovieHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieTitle, {\n    id: `movie-title-${movie.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(RatingBox, {\n    id: `movie-rating-${movie.vote_average.toFixed(1)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, movie.vote_average.toFixed(1))), /*#__PURE__*/React.createElement(GenreRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Genre, {\n    id: `movie-genres-${getGenreLabels(movie.genre_ids, genreList)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, getGenreLabels(movie.genre_ids, genreList))), /*#__PURE__*/React.createElement(DescriptionContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, isMobile ? applyLastLineFade(movie.overview) : movie.overview), /*#__PURE__*/React.createElement(MovieRelease, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, formatUkDate(movie.release_date)))));\n}\nconst MovieItemWrapper = styled.div`\n  position: relative;\n  background-color: white;\n  border-radius: 3px;\n  display: grid;\n  grid-template-columns: 0.5fr 2fr;\n  grid-gap: 2px;\n  padding: 20px;\n`;\nconst LeftCont = styled.div`\n  display: inline-block;\n`;\nconst MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n`;\nconst RightCont = styled.div`\n  display: inline-block;\n`;\nconst MovieHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 15px;\n  padding-right: 15px;\n  align-items: center;\n`;\nconst MovieTitle = styled.div`\n  font-size: 1.3em;\n  font-weight: 900;\n  color: ${colors.fontColor};\n`;\nconst RatingBox = styled.div`\n  font-weight: 700;\n  color: white;\n  background-color: ${colors.primaryColor};\n  padding: 3px;\n  border-radius: 5px;\n`;\nconst GenreRow = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 15px;\n\n  @media ${media.mobile} {\n    padding-top: 5px;\n  }\n`;\nconst Genre = styled.div`\n  font-size: 1em;\n  font-weight: 700;\n  color: ${colors.primaryColor};\n\n  @media ${media.mobile} {\n    font-size: 0.7em;\n    font-weight: 700;\n  }\n`;\nconst DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst MovieDescription = styled.div`\n  display: inline-block;\n  padding-top: 10px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: ${colors.fontColor};\n\n  @media ${media.mobile} {\n    height: 105px;\n    overflow: hidden;\n  }\n`;\nconst MovieRelease = styled.div`\n  padding-top: 40px;\n  padding-left: 15px;\n  font-size: 0.8em;\n  font-weight: 500;\n  color: ${colors.primaryColor};\n`;","map":{"version":3,"names":["React","styled","colors","useMediaQuery","applyLastLineFade","media","formatUkDate","MovieItem","movie","genreList","isMobile","getGenreLabels","ids","unformattedLabels","map","id","genre","find","name","formattedLabels","join","createElement","MovieItemWrapper","tabIndex","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LeftCont","MoviePoster","alt","src","poster_path","RightCont","MovieHeader","MovieTitle","RatingBox","vote_average","toFixed","GenreRow","Genre","genre_ids","DescriptionContainer","MovieDescription","overview","MovieRelease","release_date","div","img","fontColor","primaryColor","mobile"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as colors from \"../../colors\";\r\nimport { useMediaQuery } from \"../../utils/useMediaQuery\";\r\nimport { applyLastLineFade } from \"../../utils/lastLineFade\";\r\nimport { media } from \"../../utils/mediaBreakPoints\";\r\nimport { formatUkDate } from \"../../utils/formatUkDate\";\r\n\r\ntype MovieItemProps = {\r\n  movie: {\r\n    poster_path: string;\r\n    title: string;\r\n    vote_average: number;\r\n    overview: string;\r\n    release_date: string;\r\n    genre_ids: number[];\r\n  };\r\n  genreList: { id: number; name: string }[];\r\n};\r\n\r\nexport default function MovieItem({ movie, genreList }: MovieItemProps) {\r\n  const isMobile: boolean = useMediaQuery(\"(max-width: 480px)\");\r\n  const getGenreLabels = (\r\n    ids: number[],\r\n    genreList: { id: number; name: string }[]\r\n  ): string => {\r\n    const unformattedLabels = ids.map((id: number) => {\r\n      const genre = genreList.find((genre) => genre.id === id);\r\n      return genre ? genre.name : \"Unknown\";\r\n    });\r\n    const formattedLabels = unformattedLabels.join(\" | \");\r\n    return formattedLabels;\r\n  };\r\n\r\n  return (\r\n    <MovieItemWrapper\r\n      tabIndex={0}\r\n      aria-labelledby={`movie-title-${movie.title}`}\r\n    >\r\n      <LeftCont>\r\n        <MoviePoster\r\n          alt={`${movie.title} poster`}\r\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n        />\r\n      </LeftCont>\r\n      <RightCont>\r\n        <MovieHeader>\r\n          <MovieTitle id={`movie-title-${movie.title}`}>\r\n            {movie.title}\r\n          </MovieTitle>\r\n          <RatingBox id={`movie-rating-${movie.vote_average.toFixed(1)}`}>\r\n            {movie.vote_average.toFixed(1)}\r\n          </RatingBox>\r\n        </MovieHeader>\r\n        <GenreRow>\r\n          <Genre\r\n            id={`movie-genres-${getGenreLabels(movie.genre_ids, genreList)}`}\r\n          >\r\n            {getGenreLabels(movie.genre_ids, genreList)}\r\n          </Genre>\r\n        </GenreRow>\r\n        <DescriptionContainer>\r\n          <MovieDescription>\r\n            {isMobile ? applyLastLineFade(movie.overview) : movie.overview}\r\n          </MovieDescription>\r\n          <MovieRelease>{formatUkDate(movie.release_date)}</MovieRelease>\r\n        </DescriptionContainer>\r\n      </RightCont>\r\n    </MovieItemWrapper>\r\n  );\r\n}\r\n\r\nconst MovieItemWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 2fr;\r\n  grid-gap: 2px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LeftCont = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst MoviePoster = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst RightCont = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst MovieHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 900;\r\n  color: ${colors.fontColor};\r\n`;\r\n\r\nconst RatingBox = styled.div`\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: ${colors.primaryColor};\r\n  padding: 3px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GenreRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 15px;\r\n\r\n  @media ${media.mobile} {\r\n    padding-top: 5px;\r\n  }\r\n`;\r\n\r\nconst Genre = styled.div`\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${colors.primaryColor};\r\n\r\n  @media ${media.mobile} {\r\n    font-size: 0.7em;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst MovieDescription = styled.div`\r\n  display: inline-block;\r\n  padding-top: 10px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  color: ${colors.fontColor};\r\n\r\n  @media ${media.mobile} {\r\n    height: 105px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst MovieRelease = styled.div`\r\n  padding-top: 40px;\r\n  padding-left: 15px;\r\n  font-size: 0.8em;\r\n  font-weight: 500;\r\n  color: ${colors.primaryColor};\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}