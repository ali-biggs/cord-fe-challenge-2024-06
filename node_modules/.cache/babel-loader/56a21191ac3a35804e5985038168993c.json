{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/pages/discover/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SearchFilters from \"../../components/searchfilter\";\nimport MovieList from \"../../components/movielist\";\nexport default function Discover() {\n  // You don't need to keep the current structure of this state object. Feel free to restructure it as needed.\n  const [state] = useState({\n    keyword: \"\",\n    year: 0,\n    results: [],\n    movieDetails: null,\n    totalCount: 0,\n    genreOptions: [],\n    ratingOptions: [{\n      id: 7.5,\n      name: 7.5\n    }, {\n      id: 8,\n      name: 8\n    }, {\n      id: 8.5,\n      name: 8.5\n    }, {\n      id: 9,\n      name: 9\n    }, {\n      id: 9.5,\n      name: 9.5\n    }, {\n      id: 10,\n      name: 10\n    }],\n    languageOptions: [{\n      id: \"GR\",\n      name: \"Greek\"\n    }, {\n      id: \"EN\",\n      name: \"English\"\n    }, {\n      id: \"RU\",\n      name: \"Russian\"\n    }, {\n      id: \"PO\",\n      name: \"Polish\"\n    }]\n  });\n\n  // Write a function to preload the popular movies when page loads & get the movie genres\n\n  // Write a function to get the movie details based on the movie id taken from the URL.\n\n  const searchMovies = async (keyword, year) => {\n    // Write a function to trigger the API request and load the search results based on the keyword and year given as parameters\n  };\n  const {\n    genreOptions,\n    languageOptions,\n    ratingOptions,\n    totalCount,\n    results,\n    movieDetails\n  } = state;\n  return /*#__PURE__*/React.createElement(DiscoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MobilePageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Discover\"), /*#__PURE__*/React.createElement(MovieFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchFilters, {\n    genres: genreOptions,\n    ratings: ratingOptions,\n    languages: languageOptions,\n    searchMovies: (keyword, year) => searchMovies(keyword, year),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MovieResults, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, totalCount > 0 && /*#__PURE__*/React.createElement(TotalCounter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }\n  }, totalCount, \" results\"), /*#__PURE__*/React.createElement(MovieList, {\n    movies: results || [],\n    genres: genreOptions || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}\nconst DiscoverWrapper = styled.div`\n  padding: 60px 35px;\n`;\nconst TotalCounter = styled.div`\n  font-weight: 900;\n`;\nconst MovieResults = styled.div``;\nconst MovieFilters = styled.div``;\nconst MobilePageTitle = styled.header``;","map":{"version":3,"names":["React","useState","styled","SearchFilters","MovieList","Discover","state","keyword","year","results","movieDetails","totalCount","genreOptions","ratingOptions","id","name","languageOptions","searchMovies","createElement","DiscoverWrapper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MobilePageTitle","MovieFilters","genres","ratings","languages","MovieResults","TotalCounter","movies","div","header"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/pages/discover/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as colors from \"../../colors\";\r\nimport * as fetcher from \"../../fetcher\";\r\n\r\nimport SearchFilters from \"../../components/searchfilter\";\r\nimport MovieList from \"../../components/movielist\";\r\n\r\n\r\nexport default function Discover() {\r\n  // You don't need to keep the current structure of this state object. Feel free to restructure it as needed.\r\n  const [state] = useState({\r\n    keyword: \"\",\r\n    year: 0,\r\n    results: [],\r\n    movieDetails: null,\r\n    totalCount: 0,\r\n    genreOptions: [],\r\n    ratingOptions: [\r\n      { id: 7.5, name: 7.5 },\r\n      { id: 8, name: 8 },\r\n      { id: 8.5, name: 8.5 },\r\n      { id: 9, name: 9 },\r\n      { id: 9.5, name: 9.5 },\r\n      { id: 10, name: 10 },\r\n    ],\r\n    languageOptions: [\r\n      { id: \"GR\", name: \"Greek\" },\r\n      { id: \"EN\", name: \"English\" },\r\n      { id: \"RU\", name: \"Russian\" },\r\n      { id: \"PO\", name: \"Polish\" },\r\n    ],\r\n  });\r\n\r\n  // Write a function to preload the popular movies when page loads & get the movie genres\r\n\r\n  // Write a function to get the movie details based on the movie id taken from the URL.\r\n\r\n  const searchMovies = async (keyword: string, year: number) => {\r\n    // Write a function to trigger the API request and load the search results based on the keyword and year given as parameters\r\n  };\r\n\r\n  const {\r\n    genreOptions,\r\n    languageOptions,\r\n    ratingOptions,\r\n    totalCount,\r\n    results,\r\n    movieDetails,\r\n  } = state;\r\n\r\n  return (\r\n    <DiscoverWrapper>\r\n      <MobilePageTitle>Discover</MobilePageTitle>\r\n      <MovieFilters>\r\n        <SearchFilters\r\n          genres={genreOptions}\r\n          ratings={ratingOptions}\r\n          languages={languageOptions}\r\n          searchMovies={(keyword: string, year: number) =>\r\n            searchMovies(keyword, year)\r\n          }\r\n        />\r\n      </MovieFilters>\r\n      <MovieResults>\r\n        {totalCount > 0 && <TotalCounter>{totalCount} results</TotalCounter>}\r\n        <MovieList movies={results as [] || []} genres={genreOptions as [] || []} />\r\n        {/* Each movie must have a unique URL and if clicked a pop-up should appear showing the movie details and the action buttons as shown in the wireframe */}\r\n      </MovieResults>\r\n    </DiscoverWrapper>\r\n  );\r\n}\r\n\r\nconst DiscoverWrapper = styled.div`\r\n  padding: 60px 35px;\r\n`;\r\n\r\nconst TotalCounter = styled.div`\r\n  font-weight: 900;\r\n`;\r\n\r\nconst MovieResults = styled.div``;\r\n\r\nconst MovieFilters = styled.div``;\r\n\r\nconst MobilePageTitle = styled.header``;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}