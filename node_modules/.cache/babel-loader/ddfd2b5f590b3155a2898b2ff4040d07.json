{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Checkbox from \"../checkbox\";\nexport default function ExpandableFilters({\n  genres,\n  ratings,\n  languages\n}) {\n  const [filtersShown] = useState(false);\n  const [showGenres, setShowGenres] = useState(false);\n  const [showMinVote, setShowMinVote] = useState(false);\n  const [showLanguage, setShowLanguage] = useState(false);\n  console.log(\"genres in filters\", genres);\n\n  // You need to create your own checkbox component with a custom checkmark\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    plus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), \"Select genre(s)\"), /*#__PURE__*/React.createElement(ExpandableSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, genres.map(genre => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      genreTitle: genre.name,\n      genreId: genre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    });\n  })));\n}\nconst SectionTitle = styled.div`\n  font-weight = 200\n`;\nconst ExpandableSection = styled.div``;\nconst ExpandableIcon = styled.div`\n  position: relative;\n  width: 24px;\n  height: 24px;\n\n  ${props => props.plus && css`\n      &::before,\n      &::after {\n        content: \"\";\n        position: absolute;\n        background-color: black; \n      }\n\n      &::before {\n        top: 50%;\n        left: 0;\n        width: 100%;\n        height: 4px;\n        transform: translateY(-50%);\n      }\n\n      &::after {\n        top: 0;\n        left: 50%;\n        width: 4px;\n        height: 100%;\n        transform: translateX(-50%);\n      }\n    `}\n\n  ${props => props.minus && css`\n      &::before {\n        content: \"\";\n        display: inline-block;\n        background-image: url(${SearchWhite});\n        background-size: contain;\n        background-repeat: no-repeat;\n        width: 30px;\n        height: 30px;\n        position: absolute;\n        right: 15px;\n        top: 50%;\n        transform: translateY(-40%);\n      }\n    `}\n`;","map":{"version":3,"names":["React","useState","styled","css","Checkbox","ExpandableFilters","genres","ratings","languages","filtersShown","showGenres","setShowGenres","showMinVote","setShowMinVote","showLanguage","setShowLanguage","console","log","createElement","Fragment","SectionTitle","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ExpandableIcon","plus","ExpandableSection","map","genre","genreTitle","name","genreId","id","div","props","minus","SearchWhite"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport Checkbox from \"../checkbox\";\r\n\r\ninterface ExpandableIconProps {\r\n  minus?: boolean;\r\n  plus?: boolean;\r\n}\r\n\r\ntype ExpandableFiltersProps = {\r\n  // genres, ratings, languages, searchMovies\r\n  genres: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n  ratings: {\r\n    id: number;\r\n    name: number;\r\n  }[];\r\n  languages: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\nexport default function ExpandableFilters({\r\n  genres,\r\n  ratings,\r\n  languages,\r\n}: ExpandableFiltersProps) {\r\n  const [filtersShown] = useState(false);\r\n  const [showGenres, setShowGenres] = useState<boolean>(false);\r\n  const [showMinVote, setShowMinVote] = useState<boolean>(false);\r\n  const [showLanguage, setShowLanguage] = useState<boolean>(false);\r\n  console.log(\"genres in filters\", genres);\r\n\r\n  // You need to create your own checkbox component with a custom checkmark\r\n\r\n  return (\r\n    <>\r\n      <SectionTitle>\r\n        <ExpandableIcon plus/>\r\n         Select genre(s)</SectionTitle>\r\n      <ExpandableSection>\r\n        {genres.map((genre) => {\r\n          return <Checkbox genreTitle={genre.name} genreId={genre.id} />;\r\n        })}\r\n      </ExpandableSection>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SectionTitle = styled.div`\r\n  font-weight = 200\r\n`;\r\n\r\nconst ExpandableSection = styled.div``;\r\n\r\nconst ExpandableIcon = styled.div<ExpandableIconProps>`\r\n  position: relative;\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  ${(props) =>\r\n    props.plus &&\r\n    css`\r\n      &::before,\r\n      &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        background-color: black; \r\n      }\r\n\r\n      &::before {\r\n        top: 50%;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 4px;\r\n        transform: translateY(-50%);\r\n      }\r\n\r\n      &::after {\r\n        top: 0;\r\n        left: 50%;\r\n        width: 4px;\r\n        height: 100%;\r\n        transform: translateX(-50%);\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.minus &&\r\n    css`\r\n      &::before {\r\n        content: \"\";\r\n        display: inline-block;\r\n        background-image: url(${SearchWhite});\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        width: 30px;\r\n        height: 30px;\r\n        position: absolute;\r\n        right: 15px;\r\n        top: 50%;\r\n        transform: translateY(-40%);\r\n      }\r\n    `}\r\n`;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAE/C,OAAOC,QAAQ,MAAM,aAAa;AAuBlC,eAAe,SAASC,iBAAiBA,CAAC;EACxCC,MAAM;EACNC,OAAO;EACPC;AACsB,CAAC,EAAE;EACzB,MAAM,CAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAC5D,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAChEe,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEX,MAAM,CAAC;;EAExC;;EAEA,oBACEN,KAAA,CAAAkB,aAAA,CAAAlB,KAAA,CAAAmB,QAAA,qBACEnB,KAAA,CAAAkB,aAAA,CAACE,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACX1B,KAAA,CAAAkB,aAAA,CAACS,cAAc;IAACC,IAAI;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,mBACQ,CAAC,eACjC1B,KAAA,CAAAkB,aAAA,CAACW,iBAAiB;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACfpB,MAAM,CAACwB,GAAG,CAAEC,KAAK,IAAK;IACrB,oBAAO/B,KAAA,CAAAkB,aAAA,CAACd,QAAQ;MAAC4B,UAAU,EAAED,KAAK,CAACE,IAAK;MAACC,OAAO,EAAEH,KAAK,CAACI,EAAG;MAAAd,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAChE,CAAC,CACgB,CACnB,CAAC;AAEP;AAEA,MAAMN,YAAY,GAAGlB,MAAM,CAACkC,GAAG;AAC/B;AACA,CAAC;AAED,MAAMP,iBAAiB,GAAG3B,MAAM,CAACkC,GAAG,EAAE;AAEtC,MAAMT,cAAc,GAAGzB,MAAM,CAACkC,GAAwB;AACtD;AACA;AACA;AACA;AACA,IAAKC,KAAK,IACNA,KAAK,CAACT,IAAI,IACVzB,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAKkC,KAAK,IACNA,KAAK,CAACC,KAAK,IACXnC,GAAG;AACP;AACA;AACA;AACA,gCAAgCoC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}