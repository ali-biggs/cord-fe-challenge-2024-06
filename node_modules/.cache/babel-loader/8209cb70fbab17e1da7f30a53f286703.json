{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/errorModal/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"../../colors\";\nexport default function ErrorModal({\n  errors,\n  isOpen,\n  onClose\n}) {\n  if (!isOpen) return null;\n  return (\n    /*#__PURE__*/\n    // <Overlay>\n    React.createElement(ModalWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Errors\"), errors.map(error => {\n      return /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }\n      }, error);\n    }), /*#__PURE__*/React.createElement(CloseButton, {\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Close\"))\n    // </Overlay>\n  );\n}\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  background-color: rgba(2, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\nconst ModalWrapper = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  width: 300px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Title = styled.h2`\n  margin: 0 0 10px 0;\n  color: #d32f2f;\n`;\nconst Message = styled.p`\n  margin: 0 0 20px 0;\n  color: ${colors.fontColor};\n`;\nconst CloseButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: #b71c1c;\n  }\n`;","map":{"version":3,"names":["React","styled","colors","ErrorModal","errors","isOpen","onClose","createElement","ModalWrapper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Title","map","error","Message","CloseButton","onClick","Overlay","div","h2","p","fontColor","button"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/errorModal/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"../../colors\";\n\ntype ErrorModalProps = {\n  errors: string[];\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport default function ErrorModal({\n  errors,\n  isOpen,\n  onClose,\n}: ErrorModalProps) {\n  if (!isOpen) return null;\n\n  return (\n    // <Overlay>\n      <ModalWrapper>\n        <Title>Errors</Title>\n        {errors.map((error) => {\n          return <Message>{error}</Message>;\n        })}\n\n        <CloseButton onClick={onClose}>Close</CloseButton>\n      </ModalWrapper>\n    // </Overlay>\n  );\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  background-color: rgba(2, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalWrapper = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  width: 300px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0 0 10px 0;\n  color: #d32f2f;\n`;\n\nconst Message = styled.p`\n  margin: 0 0 20px 0;\n  color: ${colors.fontColor};\n`;\n\nconst CloseButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: #b71c1c;\n  }\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,KAAKC,MAAM,MAAM,cAAc;AAQtC,eAAe,SAASC,UAAUA,CAAC;EACjCC,MAAM;EACNC,MAAM;EACNC;AACe,CAAC,EAAE;EAClB,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;EAExB;IAAA;IACE;IACEL,KAAA,CAAAO,aAAA,CAACC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACXd,KAAA,CAAAO,aAAA,CAACQ,KAAK;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,QAAa,CAAC,EACpBV,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAK;MACrB,oBAAOjB,KAAA,CAAAO,aAAA,CAACW,OAAO;QAAAT,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEG,KAAe,CAAC;IACnC,CAAC,CAAC,eAEFjB,KAAA,CAAAO,aAAA,CAACY,WAAW;MAACC,OAAO,EAAEd,OAAQ;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,OAAkB,CACrC;IAChB;EAAA;AAEJ;AAEA,MAAMO,OAAO,GAAGpB,MAAM,CAACqB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMd,YAAY,GAAGP,MAAM,CAACqB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMP,KAAK,GAAGd,MAAM,CAACsB,EAAE;AACvB;AACA;AACA,CAAC;AAED,MAAML,OAAO,GAAGjB,MAAM,CAACuB,CAAC;AACxB;AACA,WAAWtB,MAAM,CAACuB,SAAS;AAC3B,CAAC;AAED,MAAMN,WAAW,GAAGlB,MAAM,CAACyB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}