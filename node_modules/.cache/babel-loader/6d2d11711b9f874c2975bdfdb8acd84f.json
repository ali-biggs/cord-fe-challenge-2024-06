{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"../../colors\";\nexport default function MovieItem({\n  movie,\n  genreList\n}) {\n  console.log(\"movie in MovieItem\", movie);\n  const getGenreLabels = (ids, genreList) => {\n    const unformattedLabels = ids.map(id => {\n      const genre = genreList.find(genre => genre.id === id);\n      return genre ? genre.name : \"Unknown\";\n    });\n    const formattedLabels = unformattedLabels.join(\" | \");\n    return formattedLabels;\n  };\n  return (\n    /*#__PURE__*/\n    // The MovieItemWrapper must be linked to the movie details popup\n    React.createElement(MovieItemWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(LeftCont, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoviePoster, {\n      alt: \"Movie poster image\",\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(RightCont, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, movie.title), /*#__PURE__*/React.createElement(RatingBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, movie.vote_average.toFixed(1))), /*#__PURE__*/React.createElement(GenreRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Genre, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, getGenreLabels(movie.genre_ids, genreList))), /*#__PURE__*/React.createElement(MovieDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, movie.overview), /*#__PURE__*/React.createElement(MovieRelease, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, movie.release_date)))\n  );\n}\nconst MovieItemWrapper = styled.div`\n  position: relative;\n  background-color: white;\n  border-radius: 3px;\n  display: grid;\n  grid-template-columns: 0.5fr 2fr;\n  grid-gap: 1px;\n  padding: 10px;\n`;\nconst LeftCont = styled.div`\n  display: inline-block;\n`;\nconst MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n`;\nconst RightCont = styled.div`\n  display: inline-block;\n  display: flex;\n  lex-direction: column;\n`;\nconst MovieHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 15px;\n  padding-right: 15px;\n  align-items: center;\n`;\nconst MovieTitle = styled.div`\n  font-size: 1.3em;\n  font-weight: 900;\n  color: ${colors.fontColor};\n`;\nconst RatingBox = styled.div`\n  font-weight: 700;\n  color: white;\n  background-color: ${colors.primaryColor};\n  padding: 3px;\n  border-radius: 5px;\n`;\nconst GenreRow = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 15px;\n`;\nconst Genre = styled.div`\n  font-size: 1em;\n  font-weight: 700;\n  color: ${colors.primaryColor};\n`;\nconst MovieDescription = styled.div`\n  display: inline-block;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: ${colors.fontColor};\n`;\nconst MovieRelease = styled.div`\n  margin-top: 50px;\n  padding-left: 15px;\n  font-size: 0.8em;\n  font-weight: 500;\n  color: ${colors.primaryColor};\n`;","map":{"version":3,"names":["React","styled","colors","MovieItem","movie","genreList","console","log","getGenreLabels","ids","unformattedLabels","map","id","genre","find","name","formattedLabels","join","createElement","MovieItemWrapper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LeftCont","MoviePoster","alt","src","poster_path","RightCont","MovieHeader","MovieTitle","title","RatingBox","vote_average","toFixed","GenreRow","Genre","genre_ids","MovieDescription","overview","MovieRelease","release_date","div","img","fontColor","primaryColor"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as colors from \"../../colors\";\r\n\r\ninterface MoviePosterProps {\r\n  imageUrl: string;\r\n}\r\n\r\ntype MovieItemProps = {\r\n  movie: {\r\n    poster_path: string;\r\n    title: string;\r\n    vote_average: number;\r\n    overview: string;\r\n    release_date: string;\r\n    genre_ids: number[];\r\n  };\r\n  genreList: { id: number; name: string }[];\r\n};\r\n\r\nexport default function MovieItem({ movie, genreList }: MovieItemProps) {\r\n  console.log(\"movie in MovieItem\", movie);\r\n\r\n  const getGenreLabels = (\r\n    ids: number[],\r\n    genreList: { id: number; name: string }[]\r\n  ): string => {\r\n    const unformattedLabels = ids.map((id: number) => {\r\n      const genre = genreList.find((genre) => genre.id === id);\r\n      return genre ? genre.name : \"Unknown\";\r\n    });\r\n    const formattedLabels = unformattedLabels.join(\" | \");\r\n    return formattedLabels;\r\n  };\r\n\r\n  return (\r\n    // The MovieItemWrapper must be linked to the movie details popup\r\n    <MovieItemWrapper>\r\n      <LeftCont>\r\n        <MoviePoster\r\n          alt=\"Movie poster image\"\r\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n        />\r\n      </LeftCont>\r\n      <RightCont>\r\n        <MovieHeader>\r\n          <MovieTitle>{movie.title}</MovieTitle>\r\n          <RatingBox>{movie.vote_average.toFixed(1)}</RatingBox>\r\n        </MovieHeader>\r\n        <GenreRow>\r\n          <Genre>{getGenreLabels(movie.genre_ids, genreList)}</Genre>\r\n        </GenreRow>\r\n        <MovieDescription>{movie.overview}</MovieDescription>\r\n        <MovieRelease>{movie.release_date}</MovieRelease>\r\n      </RightCont>\r\n    </MovieItemWrapper>\r\n  );\r\n}\r\n\r\nconst MovieItemWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 2fr;\r\n  grid-gap: 1px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst LeftCont = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst MoviePoster = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst RightCont = styled.div`\r\n  display: inline-block;\r\n  display: flex;\r\n  lex-direction: column;\r\n`;\r\n\r\nconst MovieHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 900;\r\n  color: ${colors.fontColor};\r\n`;\r\n\r\nconst RatingBox = styled.div`\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: ${colors.primaryColor};\r\n  padding: 3px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GenreRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst Genre = styled.div`\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${colors.primaryColor};\r\n`;\r\n\r\nconst MovieDescription = styled.div`\r\n  display: inline-block;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  color: ${colors.fontColor};\r\n`;\r\n\r\nconst MovieRelease = styled.div`\r\n  margin-top: 50px;\r\n  padding-left: 15px;\r\n  font-size: 0.8em;\r\n  font-weight: 500;\r\n  color: ${colors.primaryColor};\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}