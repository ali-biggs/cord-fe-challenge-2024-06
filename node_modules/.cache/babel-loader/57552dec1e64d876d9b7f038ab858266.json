{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"../checkbox\";\nexport default function ExpandableFilters({\n  genres,\n  ratings,\n  languages\n}) {\n  const [filtersShown] = useState(false);\n  const [showGenres, setShowGenre] = useState(false);\n  const [showMinVote, setShowMinVote] = useState(false);\n  const [showLanguage, setShowLanguage] = useState(false);\n  console.log(\"genres in filters\", genres);\n\n  // You need to create your own checkbox component with a custom checkmark\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Select genre(s)\"), /*#__PURE__*/React.createElement(ExpandableSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, genres.map(genre => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      genreTitle: genre.name,\n      genreId: genre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    });\n  })));\n}\nconst SectionTitle = styled.div`\n  font-weight = 200\n`;\nconst ExpandableSection = styled.div`\n  \n`;","map":{"version":3,"names":["React","useState","styled","Checkbox","ExpandableFilters","genres","ratings","languages","filtersShown","showGenres","setShowGenre","showMinVote","setShowMinVote","showLanguage","setShowLanguage","console","log","createElement","Fragment","SectionTitle","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ExpandableSection","map","genre","genreTitle","name","genreId","id","div"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Checkbox from \"../checkbox\";\r\n\r\ntype ExpandableFiltersProps = {\r\n  // genres, ratings, languages, searchMovies\r\n  genres: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n  ratings: {\r\n    id: number;\r\n    name: number;\r\n  }[];\r\n  languages: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\nexport default function ExpandableFilters({\r\n  genres,\r\n  ratings,\r\n  languages,\r\n}: ExpandableFiltersProps) {\r\n  const [filtersShown] = useState(false);\r\n  const [showGenres, setShowGenre] = useState<boolean>(false);\r\n  const [showMinVote, setShowMinVote] = useState<boolean>(false);\r\n  const [showLanguage, setShowLanguage] = useState<boolean>(false);\r\n  console.log(\"genres in filters\", genres);\r\n\r\n  // You need to create your own checkbox component with a custom checkmark\r\n\r\n  return (\r\n    <>\r\n    <SectionTitle>Select genre(s)</SectionTitle>\r\n    <ExpandableSection>\r\n      {genres.map((genre) => {\r\n        return <Checkbox genreTitle={genre.name} genreId={genre.id} />;\r\n      })}\r\n      </ExpandableSection>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SectionTitle = styled.div`\r\n  font-weight = 200\r\n`;\r\n\r\nconst ExpandableSection = styled.div`\r\n  \r\n`;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,QAAQ,MAAM,aAAa;AAkBlC,eAAe,SAASC,iBAAiBA,CAAC;EACxCC,MAAM;EACNC,OAAO;EACPC;AACsB,CAAC,EAAE;EACzB,MAAM,CAACC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EAC3D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAChEc,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEX,MAAM,CAAC;;EAExC;;EAEA,oBACEL,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAkB,QAAA,qBACAlB,KAAA,CAAAiB,aAAA,CAACE,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAA6B,CAAC,eAC5CzB,KAAA,CAAAiB,aAAA,CAACS,iBAAiB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACfpB,MAAM,CAACsB,GAAG,CAAEC,KAAK,IAAK;IACrB,oBAAO5B,KAAA,CAAAiB,aAAA,CAACd,QAAQ;MAAC0B,UAAU,EAAED,KAAK,CAACE,IAAK;MAACC,OAAO,EAAEH,KAAK,CAACI,EAAG;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAChE,CAAC,CACkB,CACnB,CAAC;AAEP;AAEA,MAAMN,YAAY,GAAGjB,MAAM,CAAC+B,GAAG;AAC/B;AACA,CAAC;AAED,MAAMP,iBAAiB,GAAGxB,MAAM,CAAC+B,GAAG;AACpC;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}