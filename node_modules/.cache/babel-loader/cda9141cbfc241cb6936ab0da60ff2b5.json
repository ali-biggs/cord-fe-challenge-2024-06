{"ast":null,"code":"import axios from \"axios\";\nexport const getGenreOptions = async (languageCode = \"en\") => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/genre/movie/list?language=${languageCode}`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    return response.data.genres;\n  } catch (error) {\n    console.log(\"Error retreiving genres: \", error);\n  }\n};\nexport const getLanguageOptions = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/configuration/languages`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    const formattedLanguageOptions = response.data.map(item => ({\n      id: item.iso_639_1,\n      name: item.english_name\n    })).sort((a, b) => a.name.localeCompare(b.name));\n    return formattedLanguageOptions;\n  } catch (error) {\n    console.log(\"Error retreiving languages: \", error);\n  }\n};\nexport const getMovieByMinVote = async vote => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/discover/movie?sort_by=popularity.desc&vote_average.gte=${vote}&vote_average.lte=${vote}`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(\"Error retreiving min vote: \", error);\n    return error;\n  }\n};\nexport const getMovieByKeywordAndYear = async (keyword, year) => {\n  try {\n    const baseUrl = `${process.env.REACT_APP_TMDB_PUBLIC_URL}/search/movie?sort_by=popularity.desc`;\n    const keyWordParam = keyword ? `query=${keyword}` : \"\";\n    const yearParam = year ? `&primary_release_date.gte=${year}` : undefined;\n    const url = `${baseUrl}${yearParam}${keyWordParam}`;\n    console.log(`${baseUrl}${yearParam}${keyWordParam}`);\n    const response = await axios.get(url, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    console.log(\"response\", response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(\"Error retreiving min vote: \", error);\n    return error;\n  }\n};\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/movie/popular`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(\"Error retreiving popular movies: \", error);\n    return error;\n  }\n};\nexport const getTotalMovieCount = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/discover/movie`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    return response.data.total_results;\n  } catch (error) {\n    console.log(\"Error retreiving popular movies: \", error);\n    return error;\n  }\n};\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_TMDB_PUBLIC_URL}/movie/${id}`, {\n      headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(\"Error retreiving movie details: \", error);\n    return error;\n  }\n};","map":{"version":3,"names":["axios","getGenreOptions","languageCode","response","get","process","env","REACT_APP_TMDB_PUBLIC_URL","headers","accept","Authorization","REACT_APP_TMDB_ACCESS_TOKEN","data","genres","error","console","log","getLanguageOptions","formattedLanguageOptions","map","item","id","iso_639_1","name","english_name","sort","a","b","localeCompare","getMovieByMinVote","vote","results","getMovieByKeywordAndYear","keyword","year","baseUrl","keyWordParam","yearParam","undefined","url","getPopularMovies","getTotalMovieCount","total_results","getMovieDetails"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/utils/fetcher.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getGenreOptions = async (languageCode: string = \"en\") => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/genre/movie/list?language=${languageCode}`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data.genres;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving genres: \", error);\r\n  }\r\n};\r\n\r\nexport const getLanguageOptions = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/configuration/languages`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    const formattedLanguageOptions = response.data\r\n      .map((item: any) => ({\r\n        id: item.iso_639_1,\r\n        name: item.english_name,\r\n      }))\r\n      .sort((a: any, b: any) => a.name.localeCompare(b.name));\r\n    return formattedLanguageOptions;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving languages: \", error);\r\n  }\r\n};\r\n\r\nexport const getMovieByMinVote = async (vote: number) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/discover/movie?sort_by=popularity.desc&vote_average.gte=${vote}&vote_average.lte=${vote}`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving min vote: \", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getMovieByKeywordAndYear = async (\r\n  keyword?: string,\r\n  year?: number\r\n) => {\r\n  try {\r\n    const baseUrl = `${process.env.REACT_APP_TMDB_PUBLIC_URL}/search/movie?sort_by=popularity.desc`;\r\n    const keyWordParam = keyword ? `query=${keyword}` : \"\";\r\n    const yearParam = year ? `&primary_release_date.gte=${year}` : undefined;\r\n    const url = `${baseUrl}${yearParam}${keyWordParam}`;\r\n    console.log(`${baseUrl}${yearParam}${keyWordParam}`);\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        accept: \"application/json\",\r\n        Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n      },\r\n    });\r\n    console.log(\"response\", response.data.results);\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving min vote: \", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getPopularMovies = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/movie/popular`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving popular movies: \", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getTotalMovieCount = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/discover/movie`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data.total_results;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving popular movies: \", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (id: number) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_TMDB_PUBLIC_URL}/movie/${id}`,\r\n      {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_TMDB_ACCESS_TOKEN}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error retreiving movie details: \", error);\r\n    return error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}