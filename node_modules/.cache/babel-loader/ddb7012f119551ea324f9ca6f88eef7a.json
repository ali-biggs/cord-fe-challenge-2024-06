{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport * as colors from \"../../colors\";\nimport Checkbox from \"../checkbox\";\nexport default function ExpandableFilters({\n  genres,\n  ratings,\n  languages\n}) {\n  const [showGenres, setShowGenres] = useState(true);\n  const [showMinVote, setShowMinVote] = useState(false);\n  const [showLanguage, setShowLanguage] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    expanded: showGenres,\n    onClick: () => setShowGenres(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Select genre(s)\")), /*#__PURE__*/React.createElement(ExpandableSection, {\n    expanded: showGenres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, genres.map(genre => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      label: genre.name,\n      id: genre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    });\n  })), /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    expanded: showMinVote,\n    onClick: () => setShowMinVote(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Select min. vote\")), /*#__PURE__*/React.createElement(ExpandableSection, {\n    expanded: showMinVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, ratings.map(rating => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      label: rating.name.toString(),\n      id: rating.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    });\n  })), /*#__PURE__*/React.createElement(SectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandableIcon, {\n    expanded: showLanguage,\n    onClick: () => setShowLanguage(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SectionLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Select language\")), /*#__PURE__*/React.createElement(ExpandableSection, {\n    expanded: showLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, languages.map(language => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      label: language.name,\n      id: language.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    });\n  })));\n}\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding-left: 3px;\n`;\nconst SectionLabel = styled.div`\n  font-weight: 200;\n`;\nconst ExpandableSection = styled.div`\n  margin-top: 20px;\n  height: ${props => props.expanded ? \"100%\" : \"0px\"};\n  overflow: hidden;\n`;\nconst ExpandableIcon = styled.button`\n  position: relative;\n  width: 15px;\n  height: 15px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n\n  ${props => !props.expanded ? css`\n          &::before,\n          &::after {\n            content: \"\";\n            position: absolute;\n            background-color: ${colors.fontColor};\n          }\n\n          &::before {\n            top: 50%;\n            left: 0;\n            width: 100%;\n            height: 2px;\n            transform: translateY(-50%);\n          }\n\n          &::after {\n            top: 0;\n            left: 50%;\n            width: 2px;\n            height: 100%;\n            transform: translateX(-50%);\n          }\n        ` : css`\n          &::before,\n          &::after {\n            content: \"\";\n            position: absolute;\n            background-color: ${colors.fontColor};\n          }\n\n          &::before {\n            top: 50%;\n            left: 0;\n            width: 100%;\n            height: 2px;\n            transform: translateY(-50%);\n          }\n        `}\n`;","map":{"version":3,"names":["React","useState","styled","css","colors","Checkbox","ExpandableFilters","genres","ratings","languages","showGenres","setShowGenres","showMinVote","setShowMinVote","showLanguage","setShowLanguage","createElement","Fragment","SectionHeader","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ExpandableIcon","expanded","onClick","prev","SectionLabel","ExpandableSection","map","genre","label","name","id","rating","toString","language","div","props","button","fontColor"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/expandablefilters/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as colors from \"../../colors\";\r\n\r\nimport Checkbox from \"../checkbox\";\r\n\r\ninterface ExpandableIconProps {\r\n  expanded?: boolean;\r\n}\r\ninterface ExpandableSectionProps {\r\n  expanded?: boolean;\r\n}\r\n\r\ntype ExpandableFiltersProps = {\r\n  // genres, ratings, languages, searchMovies\r\n  genres: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n  ratings: {\r\n    id: number;\r\n    name: number;\r\n  }[];\r\n  languages: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\nexport default function ExpandableFilters({\r\n  genres,\r\n  ratings,\r\n  languages,\r\n}: ExpandableFiltersProps) {\r\n  const [showGenres, setShowGenres] = useState<boolean>(true);\r\n  const [showMinVote, setShowMinVote] = useState<boolean>(false);\r\n  const [showLanguage, setShowLanguage] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          expanded={showGenres}\r\n          onClick={() => setShowGenres((prev) => !prev)}\r\n        />\r\n        <SectionLabel>Select genre(s)</SectionLabel>\r\n      </SectionHeader>\r\n      <ExpandableSection expanded={showGenres}>\r\n        {genres.map((genre) => {\r\n          return <Checkbox label={genre.name} id={genre.id} />;\r\n        })}\r\n      </ExpandableSection>\r\n\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          expanded={showMinVote}\r\n          onClick={() => setShowMinVote((prev) => !prev)}\r\n        />\r\n        <SectionLabel>Select min. vote</SectionLabel>\r\n      </SectionHeader>\r\n      <ExpandableSection expanded={showMinVote}>\r\n        {ratings.map((rating) => {\r\n          return <Checkbox label={rating.name.toString()} id={rating.id} />;\r\n        })}\r\n      </ExpandableSection>\r\n\r\n      <SectionHeader>\r\n        <ExpandableIcon\r\n          expanded={showLanguage}\r\n          onClick={() => setShowLanguage((prev) => !prev)}\r\n        />\r\n        <SectionLabel>Select language</SectionLabel>\r\n      </SectionHeader>\r\n      <ExpandableSection expanded={showLanguage}>\r\n        {languages.map((language) => {\r\n          return <Checkbox label={language.name} id={language.id} />;\r\n        })}\r\n      </ExpandableSection>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-left: 3px;\r\n`;\r\n\r\nconst SectionLabel = styled.div`\r\n  font-weight: 200;\r\n`;\r\n\r\nconst ExpandableSection = styled.div<ExpandableSectionProps>`\r\n  margin-top: 20px;\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0px\")};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ExpandableIcon = styled.button<ExpandableIconProps>`\r\n  position: relative;\r\n  width: 15px;\r\n  height: 15px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n\r\n  ${(props) =>\r\n    !props.expanded\r\n      ? css`\r\n          &::before,\r\n          &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            background-color: ${colors.fontColor};\r\n          }\r\n\r\n          &::before {\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            transform: translateY(-50%);\r\n          }\r\n\r\n          &::after {\r\n            top: 0;\r\n            left: 50%;\r\n            width: 2px;\r\n            height: 100%;\r\n            transform: translateX(-50%);\r\n          }\r\n        `\r\n      : css`\r\n          &::before,\r\n          &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            background-color: ${colors.fontColor};\r\n          }\r\n\r\n          &::before {\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 2px;\r\n            transform: translateY(-50%);\r\n          }\r\n        `}\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}