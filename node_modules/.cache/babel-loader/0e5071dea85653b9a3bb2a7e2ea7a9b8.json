{"ast":null,"code":"var _jsxFileName = \"/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"../../colors\";\nimport useMediaQuery from \"../../utils/useMediaQuery\";\nexport default function MovieItem({\n  movie,\n  genreList\n}) {\n  const isMobile = useMediaQuery(\"(max-width: 480px)\");\n  const getGenreLabels = (ids, genreList) => {\n    const unformattedLabels = ids.map(id => {\n      const genre = genreList.find(genre => genre.id === id);\n      return genre ? genre.name : \"Unknown\";\n    });\n    const formattedLabels = unformattedLabels.join(\" | \");\n    return formattedLabels;\n  };\n  const applyLastWordsFade = text => {\n    const words = text.split(\" \");\n    const lastWords = words.slice(-3).join(\" \");\n    const initialWords = words.slice(0, -3).join(\" \");\n    console.log(\"initialWords\", initialWords);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, initialWords, \" \", /*#__PURE__*/React.createElement(LastWordsFade, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }\n    }, lastWords));\n  };\n  return (\n    /*#__PURE__*/\n    // The MovieItemWrapper must be linked to the movie details popup\n    React.createElement(MovieItemWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(LeftCont, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoviePoster, {\n      alt: \"Movie poster image\",\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(RightCont, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, movie.title), /*#__PURE__*/React.createElement(RatingBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, movie.vote_average.toFixed(1))), /*#__PURE__*/React.createElement(GenreRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Genre, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, getGenreLabels(movie.genre_ids, genreList))), /*#__PURE__*/React.createElement(DescriptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, isMobile ? applyLastWordsFade(movie.overview) : movie.overview), /*#__PURE__*/React.createElement(MovieRelease, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, movie.release_date))))\n  );\n}\nconst breakpoints = {\n  mobile: \"480px\",\n  desktop: \"1024px\"\n};\nconst media = {\n  mobile: `(max-width: ${breakpoints.mobile})`,\n  desktop: `(max-width: ${breakpoints.desktop})`\n};\nconst MovieItemWrapper = styled.div`\n  position: relative;\n  background-color: white;\n  border-radius: 3px;\n  display: grid;\n  grid-template-columns: 0.5fr 2fr;\n  grid-gap: 2px;\n  padding: 20px;\n`;\nconst LeftCont = styled.div`\n  display: inline-block;\n`;\nconst MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n`;\nconst RightCont = styled.div`\n  display: inline-block;\n`;\nconst MovieHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 15px;\n  padding-right: 15px;\n  align-items: center;\n`;\nconst MovieTitle = styled.div`\n  font-size: 1.3em;\n  font-weight: 900;\n  color: ${colors.fontColor};\n`;\nconst RatingBox = styled.div`\n  font-weight: 700;\n  color: white;\n  background-color: ${colors.primaryColor};\n  padding: 3px;\n  border-radius: 5px;\n`;\nconst GenreRow = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 15px;\n\n  @media ${media.mobile} {\n    padding-top: 5px;\n  }\n`;\nconst Genre = styled.div`\n  font-size: 1em;\n  font-weight: 700;\n  color: ${colors.primaryColor};\n\n  @media ${media.mobile} {\n    font-size: 0.7em;\n    font-weight: 700;\n  }\n`;\nconst DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst MovieDescription = styled.div`\n  display: inline-block;\n  padding-top: 10px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: ${colors.fontColor};\n\n  @media ${media.mobile} {\n    /* background: linear-gradient(to right, #000 50%, rgba(0, 0, 0, 0) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent; */\n    height: 100px;\n    overflow: hidden;\n  }\n`;\nconst LastWordsFade = styled.span`\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\nconst MovieRelease = styled.div`\n  padding-top: 40px;\n  padding-left: 15px;\n  font-size: 0.8em;\n  font-weight: 500;\n  color: ${colors.primaryColor};\n`;","map":{"version":3,"names":["React","styled","colors","useMediaQuery","MovieItem","movie","genreList","isMobile","getGenreLabels","ids","unformattedLabels","map","id","genre","find","name","formattedLabels","join","applyLastWordsFade","text","words","split","lastWords","slice","initialWords","console","log","createElement","Fragment","LastWordsFade","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MovieItemWrapper","LeftCont","MoviePoster","alt","src","poster_path","RightCont","MovieHeader","MovieTitle","title","RatingBox","vote_average","toFixed","GenreRow","Genre","genre_ids","DescriptionContainer","MovieDescription","overview","MovieRelease","release_date","breakpoints","mobile","desktop","media","div","img","fontColor","primaryColor","span"],"sources":["/Users/aliyabiggs/Documents/cord-fe-challenge-2024-06/src/components/movieitem/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as colors from \"../../colors\";\r\nimport useMediaQuery from \"../../utils/useMediaQuery\";\r\n\r\ntype MovieItemProps = {\r\n  movie: {\r\n    poster_path: string;\r\n    title: string;\r\n    vote_average: number;\r\n    overview: string;\r\n    release_date: string;\r\n    genre_ids: number[];\r\n  };\r\n  genreList: { id: number; name: string }[];\r\n};\r\n\r\nexport default function MovieItem({ movie, genreList }: MovieItemProps) {\r\n  const isMobile: boolean = useMediaQuery(\"(max-width: 480px)\");\r\n  const getGenreLabels = (\r\n    ids: number[],\r\n    genreList: { id: number; name: string }[]\r\n  ): string => {\r\n    const unformattedLabels = ids.map((id: number) => {\r\n      const genre = genreList.find((genre) => genre.id === id);\r\n      return genre ? genre.name : \"Unknown\";\r\n    });\r\n    const formattedLabels = unformattedLabels.join(\" | \");\r\n    return formattedLabels;\r\n  };\r\n\r\n  const applyLastWordsFade = (text: string) => {\r\n    const words = text.split(\" \");\r\n    const lastWords = words.slice(-3).join(\" \");\r\n    const initialWords = words.slice(0, -3).join(\" \");\r\n    console.log(\"initialWords\", initialWords)\r\n\r\n    return (\r\n      <>\r\n        {initialWords} <LastWordsFade>{lastWords}</LastWordsFade>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    // The MovieItemWrapper must be linked to the movie details popup\r\n    <MovieItemWrapper>\r\n      <LeftCont>\r\n        <MoviePoster\r\n          alt=\"Movie poster image\"\r\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n        />\r\n      </LeftCont>\r\n      <RightCont>\r\n        <MovieHeader>\r\n          <MovieTitle>{movie.title}</MovieTitle>\r\n          <RatingBox>{movie.vote_average.toFixed(1)}</RatingBox>\r\n        </MovieHeader>\r\n        <GenreRow>\r\n          <Genre>{getGenreLabels(movie.genre_ids, genreList)}</Genre>\r\n        </GenreRow>\r\n        <DescriptionContainer>\r\n          <MovieDescription>\r\n            {isMobile ? applyLastWordsFade(movie.overview) : movie.overview}\r\n          </MovieDescription>\r\n          <MovieRelease>{movie.release_date}</MovieRelease>\r\n        </DescriptionContainer>\r\n      </RightCont>\r\n    </MovieItemWrapper>\r\n  );\r\n}\r\n\r\nconst breakpoints = {\r\n  mobile: \"480px\",\r\n  desktop: \"1024px\",\r\n};\r\n\r\nconst media = {\r\n  mobile: `(max-width: ${breakpoints.mobile})`,\r\n  desktop: `(max-width: ${breakpoints.desktop})`,\r\n};\r\n\r\nconst MovieItemWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 2fr;\r\n  grid-gap: 2px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LeftCont = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst MoviePoster = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst RightCont = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst MovieHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 900;\r\n  color: ${colors.fontColor};\r\n`;\r\n\r\nconst RatingBox = styled.div`\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: ${colors.primaryColor};\r\n  padding: 3px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GenreRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 15px;\r\n\r\n  @media ${media.mobile} {\r\n    padding-top: 5px;\r\n  }\r\n`;\r\n\r\nconst Genre = styled.div`\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${colors.primaryColor};\r\n\r\n  @media ${media.mobile} {\r\n    font-size: 0.7em;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst MovieDescription = styled.div`\r\n  display: inline-block;\r\n  padding-top: 10px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  color: ${colors.fontColor};\r\n\r\n  @media ${media.mobile} {\r\n    /* background: linear-gradient(to right, #000 50%, rgba(0, 0, 0, 0) 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent; */\r\n    height: 100px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst LastWordsFade = styled.span`\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(0, 0, 0, 1) 0%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  );\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst MovieRelease = styled.div`\r\n  padding-top: 40px;\r\n  padding-left: 15px;\r\n  font-size: 0.8em;\r\n  font-weight: 500;\r\n  color: ${colors.primaryColor};\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}